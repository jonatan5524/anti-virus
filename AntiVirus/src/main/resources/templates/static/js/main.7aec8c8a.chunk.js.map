{"version":3,"sources":["api/antiVirusREST.js","api/scanners.js","components/App.js","index.js"],"names":["api","axios","create","baseURL","checkActive","component","path","a","get","response","setState","status","data","getLogger","responseType","param","params","validPath","console","log","getList","includes","virusCount","length","virusPathList","suspiciousCount","suspiciousPathList","ScanResult","state","virusListGET","suspiciousListGET","antiVirus","this","basePath","statusGetPath","setInterval","props","list","map","value","virusli","listToli","suspiciousli","class","React","Component","Logger","logEnd","createRef","loggerGetPath","btnAutoScroll","autoScoll","buttonText","onClick","id","style","float","clear","ref","el","Scanner","scannerType","activeScan","notActiveScan","activeHeader","isActive","InitUserScan","initDirectoryGetPath","startScanGetPath","input","error","handleChange","e","target","valid","startsWith","validInputCheck","type","onChange","placeholder","handleClick","startScan","UserScan","ScheduleScan","App","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.7aec8c8a.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst api = axios.create({\r\n    baseURL: \"http://localhost:4060\"\r\n});\r\n\r\n\r\nexport async function checkActive(component, path) {\r\n    try {\r\n        const response = await api.get(path);\r\n        component.setState({ status: response.data });\r\n   \r\n    } catch (error) {\r\n        component.setState({ status: false });\r\n    }\r\n};\r\n\r\nexport async function getLogger(component, path) {\r\n    try {\r\n        const response = await api.get(path, { responseType: 'text' });    \r\n        component.setState({ data: response.data }); \r\n\r\n    } catch (error) {\r\n        return error.response;\r\n    }\r\n};\r\n\r\nexport async function initDirectory(component, path, param) {\r\n    try {\r\n        await api.get(path, { responseType: 'text', params: { path: param}});\r\n        component.setState({ validPath: \"true\" });\r\n   \r\n    } catch (error) {\r\n        console.log(error.response);\r\n    }\r\n};\r\n\r\nexport async function startUserScan(component, path) {\r\n    try {\r\n        await api.get(path);  \r\n    } catch (error) {\r\n        console.log(error.response);\r\n    }\r\n};\r\n\r\nexport async function getList(component, path) {\r\n    try {\r\n        const response = await api.get(path, { responseType: \"json\" });  \r\n        if (path.includes(\"virusFoundList\")){\r\n            component.virusCount = response.data.length;\r\n            component.setState( {virusPathList: response.data} );\r\n        }\r\n        else {\r\n            component.suspiciousCount = response.data.length;\r\n            component.setState({ suspiciousPathList: response.data });\r\n        }\r\n\r\n    } catch (error) {\r\n        console.log(error );\r\n    }\r\n};\r\n","import React from \"react\";\r\nimport * as antiVirus from \"./antiVirusREST.js\";\r\nimport \"../components/App.css\";\r\n\r\n\r\nclass ScanResult extends React.Component {\r\n    state = { virusPathList: [], suspiciousPathList: [] };\r\n    virusListGET = \"/virusFoundList\";\r\n    suspiciousListGET = \"/virusSuspiciousList\";\r\n    virusCount = 0 ;\r\n    suspiciousCount = 0;\r\n\r\n    componentDidMount() {\r\n       \r\n        antiVirus.getList(this, this.basePath + this.statusGetPath);\r\n        setInterval(() => antiVirus.getList(this, this.props.basePath + this.virusListGET), 800);\r\n        setInterval(() => antiVirus.getList(this, this.props.basePath + this.suspiciousListGET), 800);\r\n    }\r\n\r\n    listToli (list) {\r\n        return list.map( (path)=> {\r\n            return <li value=\"\">{path}</li>\r\n        })\r\n    }\r\n\r\n    \r\n\r\n    render () {\r\n        const virusli = this.listToli(this.state.virusPathList);\r\n        const suspiciousli = this.listToli(this.state.suspiciousPathList);\r\n        return (\r\n            <div class=\"ui header resultScan\" >\r\n                <ol class=\"ui list\">\r\n                    <div class=\"ui inverted red segment \">\r\n                        <li value=\"\">viruses found: { this.virusCount }</li>\r\n                    </div>\r\n                    <div class=\"ui secondary red segment\">\r\n                        <ol>\r\n                            { virusli }\r\n                        </ol>\r\n                    </div>\r\n                </ol>       \r\n                <ol class=\"ui list\">\r\n                    <div class=\"ui inverted yellow segment \">\r\n                        <li value=\"\">suspicious viruses found: { this.suspiciousCount }</li>\r\n                    </div>\r\n                    <div class=\"ui secondary yellow segment\">\r\n                        <ol>\r\n                            { suspiciousli }\r\n                        </ol>\r\n                    </div>\r\n                </ol>              \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nclass Logger extends React.Component{\r\n    logEnd = React.createRef();\r\n    loggerGetPath = \"/log\";\r\n    state = { data: \"\" };\r\n    btnAutoScroll = true;\r\n    autoScoll = true;\r\n\r\n    \r\n\r\n    componentDidMount() {\r\n   //     window.onscroll = () => { this.autoScoll = false; };     \r\n        antiVirus.getLogger(this, this.props.basePath + this.loggerGetPath);\r\n   //     setInterval( () => { this.autoScoll = (window.scrollY == 0 && this.btnAutoScroll) ? true : false });\r\n        setInterval(() => antiVirus.getLogger(this, this.props.basePath + this.loggerGetPath), 800);\r\n    } \r\n\r\n    componentDidUpdate() {\r\n    //    this.scrollToBottom();\r\n    }\r\n/*\r\n    scrollToBottom = () => {\r\n        if(this.autoScoll){\r\n            this.logEnd.scrollIntoView({ behavior: 'smooth', block: 'nearest', inline: 'start' })\r\n        }\r\n    }\r\n*/\r\n    render () {\r\n        const data = this.state.data;\r\n        const buttonText = this.btnAutoScroll ? \"disable auto scroll\" : \"enable auto scroll\";\r\n        return (    \r\n            <div>\r\n                <button class=\"ui button\" onClick={ ()=> { this.btnAutoScroll = !this.btnAutoScroll}}> { buttonText }</button>\r\n                <br /><br />\r\n                <div>\r\n                    <div class=\"ui tertiary segment\" id=\"log\" >\r\n                        <p class=\"ui black\"> {data} </p>\r\n                        <div class=\"log scroll\" style={{ float:\"left\", clear: \"both\" }}\r\n                            ref={(el) => { this.logEnd = el; }}>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nclass Scanner extends React.Component {\r\n    state = { status: \"\" };\r\n    scannerType = \"\";\r\n    basePath = \"\";\r\n    statusGetPath = \"/status\";\r\n\r\n    componentDidMount() {\r\n        antiVirus.checkActive(this, this.basePath + this.statusGetPath);\r\n        setInterval(() => antiVirus.checkActive(this, this.basePath + this.statusGetPath), 800);\r\n    }\r\n\r\n    isActive(status) {\r\n        if (status) {\r\n            return this.activeScan();\r\n        }\r\n        else {\r\n            return this.notActiveScan();\r\n        }\r\n    }\r\n\r\n    activeScan(){\r\n        return (\r\n            <div>\r\n                <h3 class={`ui large header green`}> Active </h3>\r\n                <Logger basePath={ this.basePath }/>\r\n                <ScanResult basePath={ this.basePath }/>\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n    notActiveScan(){\r\n        return (\r\n        <div>\r\n            <h3 class={`ui large header red`}> Not Active </h3>\r\n            <ScanResult basePath={ this.basePath }/>\r\n        </div>\r\n        );\r\n    }\r\n    \r\n    render () {\r\n        const activeHeader = this.isActive(this.state.status);\r\n        return (\r\n            <div>\r\n                <h3 class=\"ui large dividing header\"> { this.scannerType } </h3>\r\n                { activeHeader }\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nclass InitUserScan extends React.Component {\r\n    initDirectoryGetPath = \"/initDirectoryPathScan\";\r\n    startScanGetPath = \"/start\";\r\n    input = \"\";\r\n    state = { validPath: \"false\", input: \"\", error: \"\"};\r\n\r\n    handleChange = (e) =>  {\r\n        this.input = e.target.value;\r\n    }\r\n\r\n    handleClick() {\r\n        antiVirus.initDirectory(this, this.props.basePath + this.initDirectoryGetPath, this.input);\r\n    }\r\n\r\n    validInputCheck(valid) {\r\n        if (this.state.error.startsWith(\"invalid\") && valid != \"true\" ) {\r\n            return(\r\n                <div class=\"ui pointing below label red\">\r\n                    path not found!\r\n                </div>\r\n            );\r\n        }\r\n        else if(valid == \"false\") {\r\n            return(\r\n                <div class=\"ui pointing below label\">\r\n                    Enter folder to scan\r\n                </div>\r\n            );\r\n        }\r\n        else {\r\n            return(\r\n                <div class=\"ui right pointing label green\">\r\n                    valid path\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n    startScan() {\r\n        antiVirus.startUserScan(this, this.props.basePath + this.startScanGetPath);\r\n    }\r\n\r\n    render () {\r\n        const valid = this.state.validPath;\r\n        \r\n        return (\r\n            <div>\r\n                { this.validInputCheck(valid) }\r\n                <div class={`ui ${ (valid==\"true\")? \"disabled\" : \"\" } input focus`}>\r\n                    <input id=\"initDirectoryInput\" type=\"text\" onChange={ this.handleChange } placeholder=\"init directory\" />\r\n                </div>\r\n                <div>\r\n                <input type=\"button\" class={`ui green ${ (valid==\"true\")? \"disabled\" : \"\" } button`}\r\n                                     onClick={() => {this.handleClick() }} value=\"submit\" />\r\n                </div>\r\n                <br />\r\n                <div>\r\n                <input type=\"button\" class={`ui green ${ (valid==\"false\")? \"disabled\" : \"\" } button`}\r\n                                     onClick={() => {this.startScan() }} value=\"start scan\" />\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport class UserScan extends Scanner {\r\n    scannerType = \"User scan status:\";\r\n    basePath = \"/userScan\";\r\n\r\n    notActiveScan () {\r\n\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <h3 class={`ui large header red`}> Not Active </h3>\r\n                    <InitUserScan basePath={ this.basePath } /> \r\n                    <ScanResult basePath={ this.basePath }/>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        );\r\n    }\r\n    \r\n}\r\n\r\nexport class ScheduleScan  extends Scanner {\r\n    scannerType = \"Schedule scan status:\";\r\n    basePath = \"/scheduleScan\";\r\n   \r\n}","import React from \"react\";\r\nimport * as scanners from \"../api/scanners.js\";\r\n\r\nclass App extends React.Component {\r\n\r\n    render () {\r\n\r\n        return ( \r\n            <div class =\"main\">\r\n                <div class=\"ui inverted segment \">\r\n                    <div class=\"ui huge header \" id = \"AntiVirusHeader\"  > Anti Virus </div>\r\n                </div>\r\n                <div class=\"ui segment\">\r\n                    <div class=\"ui two column very relaxed grid\">\r\n                        <div class=\"column\" >\r\n                           <scanners.ScheduleScan/>\r\n                        </div>\r\n                        <div class=\"column\" >\r\n                           <scanners.UserScan/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App\";\r\n\r\nReactDOM.render( < App / > , document.querySelector(\"#root\"));\r\n"],"sourceRoot":""}